<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0611.0333                               -->
<workbook original-version='18.1' source-build='2022.1.3 (20221.22.0611.0333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (tableu table 2)' inline='true' name='federated.0zzvfqp01z53t917hxcxd16dtq1t' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableu table 2' name='excel-direct.0fz269g1k28o4m14vwlhc0ddcs2r'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/himan/OneDrive/Desktop/apna college/tableu project/tableu table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0fz269g1k28o4m14vwlhc0ddcs2r' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0fz269g1k28o4m14vwlhc0ddcs2r' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CC523B89CD3844AF96BA8A16D767BFBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_death_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_death_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_CC523B89CD3844AF96BA8A16D767BFBE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_CC523B89CD3844AF96BA8A16D767BFBE]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_CC523B89CD3844AF96BA8A16D767BFBE'>
            <properties context=''>
              <relation connection='excel-direct.0fz269g1k28o4m14vwlhc0ddcs2r' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_death_count' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableu table 3)' inline='true' name='federated.069bl8z1dfwyw214zmgpm1vqp1lt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableu table 3' name='excel-direct.17rdww50forgy01a3tj7w1babo84'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/himan/OneDrive/Desktop/apna college/tableu project/tableu table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.17rdww50forgy01a3tj7w1babo84' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D437:no:A1:D437:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_case' ordinal='2' />
            <column datatype='real' name='percentage_population_infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.17rdww50forgy01a3tj7w1babo84' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D437:no:A1:D437:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_case' ordinal='2' />
            <column datatype='real' name='percentage_population_infected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D437:no:A1:D437:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A3A7C2A875624C7CBA92C9BCDABF0F04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A3A7C2A875624C7CBA92C9BCDABF0F04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_case</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_case</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A3A7C2A875624C7CBA92C9BCDABF0F04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_population_infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_population_infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>percentage_population_infected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A3A7C2A875624C7CBA92C9BCDABF0F04]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A3A7C2A875624C7CBA92C9BCDABF0F04]' role='measure' type='quantitative' />
      <column caption='Highest Case' datatype='integer' name='[highest_case]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percentage Population Infected' datatype='real' name='[percentage_population_infected]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A3A7C2A875624C7CBA92C9BCDABF0F04'>
            <properties context=''>
              <relation connection='excel-direct.17rdww50forgy01a3tj7w1babo84' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D437:no:A1:D437:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='highest_case' ordinal='2' />
                  <column datatype='real' name='percentage_population_infected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableu table 4)' inline='true' name='federated.1chytnb0tnbkhu1et9mxq19he6ec' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableu table 4' name='excel-direct.1mdetd10hbd9o619kpjlz0bmmb66'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/himan/OneDrive/Desktop/apna college/tableu project/tableu table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1mdetd10hbd9o619kpjlz0bmmb66' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_case' ordinal='3' />
            <column datatype='real' name='percentage_population_infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1mdetd10hbd9o619kpjlz0bmmb66' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_case' ordinal='3' />
            <column datatype='real' name='percentage_population_infected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1CA986AFEB474B82AB8CB736E9FB19CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1CA986AFEB474B82AB8CB736E9FB19CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1CA986AFEB474B82AB8CB736E9FB19CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_case</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_case]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_case</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1CA986AFEB474B82AB8CB736E9FB19CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentage_population_infected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentage_population_infected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>percentage_population_infected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_1CA986AFEB474B82AB8CB736E9FB19CC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_1CA986AFEB474B82AB8CB736E9FB19CC]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Highest Case' datatype='integer' name='[highest_case]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Percentage Population Infected' datatype='real' name='[percentage_population_infected]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_1CA986AFEB474B82AB8CB736E9FB19CC'>
            <properties context=''>
              <relation connection='excel-direct.1mdetd10hbd9o619kpjlz0bmmb66' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='highest_case' ordinal='3' />
                  <column datatype='real' name='percentage_population_infected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (tableu table 1)' inline='true' name='federated.1hen67e0mvouf31h1nycf1a8rqpn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='tableu table 1' name='excel-direct.0z1pimz13gv9801egv6mv17benhd'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/himan/OneDrive/Desktop/apna college/tableu project/tableu table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0z1pimz13gv9801egv6mv17benhd' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_deaths' ordinal='0' />
            <column datatype='integer' name='total_cases' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0z1pimz13gv9801egv6mv17benhd' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_deaths' ordinal='0' />
            <column datatype='integer' name='total_cases' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2BDB8C094B094BA3A26583422AA971C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2BDB8C094B094BA3A26583422AA971C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>death_percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2BDB8C094B094BA3A26583422AA971C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='boolean' name='[Calculation_1565282399452663814]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[total_deaths]/[total_cases]*100=[death_percentage]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2BDB8C094B094BA3A26583422AA971C7]' role='measure' type='quantitative' />
      <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2BDB8C094B094BA3A26583422AA971C7'>
            <properties context=''>
              <relation connection='excel-direct.0z1pimz13gv9801egv6mv17benhd' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_deaths' ordinal='0' />
                  <column datatype='integer' name='total_cases' ordinal='1' />
                  <column datatype='real' name='death_percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Total Death percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableu table 1)' name='federated.1hen67e0mvouf31h1nycf1a8rqpn' />
          </datasources>
          <datasource-dependencies datasource='federated.1hen67e0mvouf31h1nycf1a8rqpn'>
            <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
            <column-instance column='[death_percentage]' derivation='Sum' name='[sum:death_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hen67e0mvouf31h1nycf1a8rqpn].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hen67e0mvouf31h1nycf1a8rqpn].[sum:death_percentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hen67e0mvouf31h1nycf1a8rqpn].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1hen67e0mvouf31h1nycf1a8rqpn].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1hen67e0mvouf31h1nycf1a8rqpn].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1hen67e0mvouf31h1nycf1a8rqpn].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hen67e0mvouf31h1nycf1a8rqpn].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.1hen67e0mvouf31h1nycf1a8rqpn].[sum:death_percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1hen67e0mvouf31h1nycf1a8rqpn].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hen67e0mvouf31h1nycf1a8rqpn].[:Measure Names]' value='207' />
            <format attr='height' value='73' />
            <format attr='text-format' field='[federated.1hen67e0mvouf31h1nycf1a8rqpn].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.1hen67e0mvouf31h1nycf1a8rqpn].[sum:death_percentage:qk]' value='c#,##0.00' />
            <format attr='vertical-align' data-class='subtotal' scope='rows' value='auto' />
            <format attr='text-align' value='center' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1hen67e0mvouf31h1nycf1a8rqpn].[:Measure Names]' value='48' />
            <format attr='background-color' value='#6d82c8' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#e6e6e6' />
            <format attr='border-color' value='#1b1b1b' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-width' data-class='subtotal' value='1' />
            <format attr='border-color' data-class='subtotal' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#666666' />
            <format attr='stroke-size' value='1' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='rows' value='#000000' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1hen67e0mvouf31h1nycf1a8rqpn].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.1hen67e0mvouf31h1nycf1a8rqpn].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{24C969FE-3B14-436E-A3BE-CCF12164BB02}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Death count continent wise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableu table 2)' name='federated.0zzvfqp01z53t917hxcxd16dtq1t' />
          </datasources>
          <datasource-dependencies datasource='federated.0zzvfqp01z53t917hxcxd16dtq1t'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_death_count]' derivation='Sum' name='[sum:total_death_count:qk]' pivot='key' type='quantitative' />
            <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0zzvfqp01z53t917hxcxd16dtq1t].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0zzvfqp01z53t917hxcxd16dtq1t].[sum:total_death_count:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zzvfqp01z53t917hxcxd16dtq1t].[none:location:nk]' value='101' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0zzvfqp01z53t917hxcxd16dtq1t].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2963535785675049' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zzvfqp01z53t917hxcxd16dtq1t].[sum:total_death_count:qk]</rows>
        <cols>[federated.0zzvfqp01z53t917hxcxd16dtq1t].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{9BFF570B-DEFF-41E2-A393-6AB895AF536C}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>percentage population affected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableu table 3)' name='federated.069bl8z1dfwyw214zmgpm1vqp1lt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.069bl8z1dfwyw214zmgpm1vqp1lt'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage Population Infected' datatype='real' name='[percentage_population_infected]' role='measure' type='quantitative' />
            <column-instance column='[percentage_population_infected]' derivation='Sum' name='[sum:percentage_population_infected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[Longitude (generated)]' field-type='quantitative' max='18456650.729445346' min='-18663345.054773785' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[Latitude (generated)]' field-type='quantitative' max='13172785.580811333' min='-9099212.7747298125' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[sum:percentage_population_infected:qk]' num-steps='5' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[sum:percentage_population_infected:qk]' value='Percentage Population Infected'>
              <formatted-text>
                <run fontalignment='2'>Percentage Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='light' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[sum:percentage_population_infected:qk]' />
              <lod column='[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[none:location:nk]' />
              <geometry column='[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[Latitude (generated)]</rows>
        <cols>[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C47EAF4D-B484-4266-B408-5FB59AD22F85}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>population infected countrywise</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (tableu table 4)' name='federated.1chytnb0tnbkhu1et9mxq19he6ec' />
          </datasources>
          <datasource-dependencies datasource='federated.1chytnb0tnbkhu1et9mxq19he6ec'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentage Population Infected' datatype='real' name='[percentage_population_infected]' role='measure' type='quantitative' />
            <column-instance column='[percentage_population_infected]' derivation='Sum' name='[sum:percentage_population_infected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1chytnb0tnbkhu1et9mxq19he6ec].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1chytnb0tnbkhu1et9mxq19he6ec].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1chytnb0tnbkhu1et9mxq19he6ec].[tdy:date:qk]' field-type='quantitative' max='#2021-07-27 00:16:23.196#' min='#2019-10-31 08:57:08.992#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1chytnb0tnbkhu1et9mxq19he6ec].[sum:percentage_population_infected:qk]' field-type='quantitative' max='12.447272473017625' min='-1.0385483011848669' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1chytnb0tnbkhu1et9mxq19he6ec].[tdy:date:qk]' scope='cols' value='month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1chytnb0tnbkhu1et9mxq19he6ec].[none:location:nk]' />
              <text column='[federated.1chytnb0tnbkhu1et9mxq19he6ec].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1chytnb0tnbkhu1et9mxq19he6ec].[sum:percentage_population_infected:qk]</rows>
        <cols>[federated.1chytnb0tnbkhu1et9mxq19he6ec].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{383B0E39-BF2F-4ACB-A5F6-1376BD43D999}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='9' param='horz' type-v2='layout-flow' w='99016' x='492' y='929'>
            <zone h='98142' id='7' type-v2='layout-basic' w='99016' x='492' y='929'>
              <zone h='30082' id='5' name='Sheet 2' w='49508' x='492' y='22067'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='30082' id='6' name='Sheet 3' w='49508' x='50000' y='22067'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='46922' id='11' name='Sheet 4' w='99016' x='492' y='52149'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='21138' id='14' name='Sheet 1' w='99016' x='492' y='929'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='950' minheight='950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='16' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='15' param='vert' type-v2='layout-flow' w='99016' x='492' y='929'>
                <zone fixed-size='162' h='21138' id='14' is-fixed='true' name='Sheet 1' w='99016' x='492' y='929'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='232' h='30082' id='5' is-fixed='true' name='Sheet 2' w='49508' x='492' y='22067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='232' h='30082' id='6' is-fixed='true' name='Sheet 3' w='49508' x='50000' y='22067'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46922' id='11' is-fixed='true' name='Sheet 4' w='99016' x='492' y='52149'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8E82F1AD-70BB-448C-AB37-9D8EC59120DA}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hen67e0mvouf31h1nycf1a8rqpn].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AEFF01D9-89F3-4B04-84A8-FC620D3A41E8}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zzvfqp01z53t917hxcxd16dtq1t].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37BD456C-E648-4BDB-8444-8D77590AA52D}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[sum:percentage_population_infected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[attr:location:nk]</field>
            <field>[federated.069bl8z1dfwyw214zmgpm1vqp1lt].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{AAF4F020-19CB-4319-9699-9AF979972B50}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1chytnb0tnbkhu1et9mxq19he6ec].[none:location:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1chytnb0tnbkhu1et9mxq19he6ec].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1chytnb0tnbkhu1et9mxq19he6ec].[none:location:nk]</field>
            <field>[federated.1chytnb0tnbkhu1et9mxq19he6ec].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A73360D3-7714-41EE-B8B9-D9F02776B487}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.1chytnb0tnbkhu1et9mxq19he6ec].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{C5A55F95-3917-4F49-8197-757CA1F63F84}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='125' name='Sheet 1' width='192'>
      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
      V8+ruuxzTQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      3DP+Pws9onSMUL8bAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
